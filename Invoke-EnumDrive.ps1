function Invoke-EnumDrive
{
    <#
    .DESCRIPTION
        
        Enumerate users via onedrive.
        Author: g0ttfrid

    .EXAMPLE
        
        PS C:\> Invoke-EnumDrive -method recon -domain domain.com.br

        Search tenant.

    .EXAMPLE

        PS C:\> Invoke-EnumDrive -method enum -tenant domain -file D:\users.txt

        Enumerate users.
    #>

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$false)][string]$method,
        [Parameter(Mandatory=$false)][string]$domain,
        [Parameter(Mandatory=$false)][string]$tenant,
        [Parameter(Mandatory=$false)][string]$file
    )
    
    $a=New-Object IO.MemoryStream(,[Convert]::FromBAsE64String("H4"+"sI"+"AAAA"+"AAA"+"EAO"+""))
    $b = New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::DEComPress)
    $c = New-Object System.IO.MemoryStream
    $b.CopyTo( $c )
    [byte[]] $d = $c.ToArray()
    $e = [System.Reflection.Assembly]::Load($d)

    if ($method -eq "recon")
    {
        [EnumDrive.Program]::Main(@($method, $domain)) | Out-Null
    }
    elseif ($method -eq "enum")
    {
        [EnumDrive.Program]::Main(@($method, $tenant, $file)) | Out-Null
    }
    else 
    {
        Write-Host "[!] Invalid args"
        Write-Host "[!] Use for get tenant: Invoke-EnumDrive -method recon -domain domain.com.br"
        Write-Host "[!] Use for enum valid users: Invoke-EnumDrive -method enum -tenant domain -file D:\users.txt"
        return
    }
}
